// <auto-generated />
using System;
using CSharpDesignPatternsInPractice.Infra.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CSharpDesignPatternsInPractice.Infra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241027071838_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("football_manager")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CSharpDesignPatternsInPractice.Domain.Entities.FootballPlayerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Age")
                        .HasColumnType("integer")
                        .HasColumnName("age");

                    b.Property<int>("Assists")
                        .HasColumnType("integer")
                        .HasColumnName("assists");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<Guid?>("FootballTeamId")
                        .HasColumnType("uuid")
                        .HasColumnName("football_team_id");

                    b.Property<string>("Footed")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("footed");

                    b.Property<int>("GoalsScored")
                        .HasColumnType("integer")
                        .HasColumnName("goals_scored");

                    b.Property<decimal>("Height")
                        .HasColumnType("numeric")
                        .HasColumnName("height");

                    b.Property<int>("JerseyNumber")
                        .HasColumnType("integer")
                        .HasColumnName("jersey_number");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<string>("LastModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nationality");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("position");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric")
                        .HasColumnName("weight");

                    b.HasKey("Id");

                    b.HasIndex("FootballTeamId");

                    b.ToTable("football_player", "football_manager");
                });

            modelBuilder.Entity("CSharpDesignPatternsInPractice.Domain.Entities.FootballTeamEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Capacity")
                        .HasColumnType("integer")
                        .HasColumnName("capacity");

                    b.Property<int>("ChampionshipsWon")
                        .HasColumnType("integer")
                        .HasColumnName("championships_won");

                    b.Property<string>("Coach")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("coach");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Founded")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("founded");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_modified");

                    b.Property<string>("LastModifiedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("League")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("league");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nationality");

                    b.Property<string>("Stadium")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("stadium");

                    b.HasKey("Id");

                    b.ToTable("football_team", "football_manager");
                });

            modelBuilder.Entity("CSharpDesignPatternsInPractice.Domain.Entities.FootballPlayerEntity", b =>
                {
                    b.HasOne("CSharpDesignPatternsInPractice.Domain.Entities.FootballTeamEntity", "FootballTeam")
                        .WithMany("FootballPlayers")
                        .HasForeignKey("FootballTeamId");

                    b.Navigation("FootballTeam");
                });

            modelBuilder.Entity("CSharpDesignPatternsInPractice.Domain.Entities.FootballTeamEntity", b =>
                {
                    b.Navigation("FootballPlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
